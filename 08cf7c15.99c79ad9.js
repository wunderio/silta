(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{105:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var o=n(0),r=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),b=o,m=u["".concat(a,".").concat(b)]||u[b]||d[b]||i;return n?r.a.createElement(m,l(l({ref:t},p),{},{components:n})):r.a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},64:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var o=n(3),r=n(7),i=(n(0),n(105)),a={id:"circleci-conf-examples",title:"CircleCI configuration examples"},l={unversionedId:"circleci-conf-examples",id:"circleci-conf-examples",isDocsHomePage:!1,title:"CircleCI configuration examples",description:"Our custom CircleCI Orb is located here//github.com/wunderio/silta-circleci/tree/master/orb",source:"@site/docs/circleci-examples.md",slug:"/circleci-conf-examples",permalink:"/silta/docs/circleci-conf-examples",editUrl:"https://github.com/wunderio/silta/tree/master/docs/circleci-examples.md",version:"current",sidebar:"someSidebar",previous:{title:"Silta project build process",permalink:"/silta/docs/anatomy-of-silta"},next:{title:"Creating a new project",permalink:"/silta/docs/creating-new-project"}},c=[{value:"Run <code>npm install</code> from another location",id:"run-npm-install-from-another-location",children:[]},{value:"Run a different command to build the frontend",id:"run-a-different-command-to-build-the-frontend",children:[]},{value:"Use npm instead of yarn",id:"use-npm-instead-of-yarn",children:[]},{value:"Deploy sub-project from within the same repo",id:"deploy-sub-project-from-within-the-same-repo",children:[]}],p={toc:c};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Our custom CircleCI Orb is located here: ",Object(i.b)("a",{parentName:"p",href:"https://github.com/wunderio/silta-circleci/tree/master/orb"},"https://github.com/wunderio/silta-circleci/tree/master/orb")),Object(i.b)("p",null,"Below is a list of examples for common needs.\nAll examples are meant to be used in the ",Object(i.b)("inlineCode",{parentName:"p"},".circleci/.yml")," file of your project."),Object(i.b)("h2",{id:"run-npm-install-from-another-location"},"Run ",Object(i.b)("inlineCode",{parentName:"h2"},"npm install")," from another location"),Object(i.b)("p",null,"We recommend putting your package.json in the Drupal root folder (one level above the web root),\nbut many existing projects still have package.json in the theme folder.\nYou can specify the path to your frontend folder by adding a parameter to the\nexisting ",Object(i.b)("inlineCode",{parentName:"p"},"npm-install-build")," command:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"- npm-install-build:\n    path: web/themes/custom/mytheme\n")),Object(i.b)("p",null,"Note that this path is relative to the Drupal root, not to the project root."),Object(i.b)("h2",{id:"run-a-different-command-to-build-the-frontend"},"Run a different command to build the frontend"),Object(i.b)("p",null,"The default command for building the frontend is ",Object(i.b)("inlineCode",{parentName:"p"},"npm run build"),", assuming there will be a ",Object(i.b)("inlineCode",{parentName:"p"},"build")," key\nin the ",Object(i.b)("inlineCode",{parentName:"p"},"script")," section of your package.json, which is recommended."),Object(i.b)("p",null,"If you have another command that should be run you can specify it in the ",Object(i.b)("inlineCode",{parentName:"p"},"npm-install-build")," step:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},'- npm-install-build:\n    build-command: "compass compile --production"\n')),Object(i.b)("h2",{id:"use-npm-instead-of-yarn"},"Use npm instead of yarn"),Object(i.b)("p",null,"Using ",Object(i.b)("inlineCode",{parentName:"p"},"npm")," is preferred over the user of ",Object(i.b)("inlineCode",{parentName:"p"},"yarn"),", and if it's not too much hassle it would be best to switch\nfor the sake of consistency.\nIn the meantime you can use the ",Object(i.b)("inlineCode",{parentName:"p"},"yarn-install-build")," step which works the same as ",Object(i.b)("inlineCode",{parentName:"p"},"npm-install-build")),Object(i.b)("h2",{id:"deploy-sub-project-from-within-the-same-repo"},"Deploy sub-project from within the same repo"),Object(i.b)("p",null,"Having e.g. Storybook or other frontend application included in the base project codebase that require\nseparate deployment can be easily done even using different chart.\nFor simple application (static) the simple chart can be used. Refer to simple examples with the following additions:"),Object(i.b)("p",null,"Tell build process (",Object(i.b)("inlineCode",{parentName:"p"},"under silta/simple-build-deploy"),") where your application code can be found (related to repo root).\nIf the command to build your application isn't the default ",Object(i.b)("inlineCode",{parentName:"p"},"npm run build"),"you can define it with the ",Object(i.b)("inlineCode",{parentName:"p"},"build_command")," parameter."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"codebase-build:\n  - silta/npm-install-build:\n      path: web/themes/custom/yourtheme\n      build-command: npm run build && npm run build-storybook\n")),Object(i.b)("p",null,"Next, you need to define the webroot of your application, e.g. where your application was built:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"build_folder: web/themes/custom/yourtheme/storybook-static\n")),Object(i.b)("p",null,"Finally, give the deployment a release-suffix:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"release-suffix: storybook\n")),Object(i.b)("p",null,"The complete deployment workflow for the app should look something like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"- silta/simple-build-deploy: &build-deploy\n    name: Storybook build & deploy\n    context: silta_dev\n    silta_config: silta/silta.yml,silta/silta-storybook.yml\n    release-suffix: storybook\n    build_folder: web/themes/custom/yourtheme/storybook-static\n    codebase-build:\n      - silta/npm-install-build:\n          path: web/themes/custom/yourtheme\n          build-command: npm run build && npm run build-storybook\n    filters:\n      branches:\n        ignore: production\n\n- silta/simple-build-deploy:\n    # Extend the build-deploy configuration for the production environment.\n    <<: *build-deploy\n    name: Storybook build & deploy production\n    context: silta_finland\n    silta_config: silta/silta.yml,silta/silta-storybook.yml,silta/silta-storybook-prod.yml\n    filters:\n      branches:\n        only: production\n")),Object(i.b)("p",null,"Note: you need to include the application specific silta_configs (here silta-storybook.yml and silta-storybook-prod.yml).\nYou should also update the drupal specific deployment steps to include the appropriate silta-cms.yml files."),Object(i.b)("p",null,"Note 2: Add nested silta configurations (i.e. ",Object(i.b)("inlineCode",{parentName:"p"},"web/themes/custom/yourtheme/silta/"),") and non-public files located in web subdirectory to ",Object(i.b)("inlineCode",{parentName:"p"},".dockerignore")," file, to exclude them from nginx and php images."),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"/silta/docs/silta-examples"},"https://wunderio.github.io/silta/docs/silta-examples")," for example on how to split the silta configuration part for this kind of setup.\nThere is also a more complex example in ","[https://github.com/wunderio/decoupled-project]","(decoupled-project -template)"))}s.isMDXComponent=!0}}]);