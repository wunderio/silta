(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{103:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),u=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=u(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=u(n),m=r,d=b["".concat(l,".").concat(m)]||b[m]||p[m]||i;return n?a.a.createElement(d,o(o({ref:t},c),{},{components:n})):a.a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},67:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),i=(n(0),n(103)),l={},o={unversionedId:"vendor-eks",id:"vendor-eks",isDocsHomePage:!1,title:"vendor-eks",description:"Amazon Web Services compatibility",source:"@site/docs/vendor-eks.md",slug:"/vendor-eks",permalink:"/silta/docs/vendor-eks",editUrl:"https://github.com/wunderio/silta/tree/master/docs/vendor-eks.md",version:"current"},s=[{value:"Cluster requirements",id:"cluster-requirements",children:[{value:"Preparation steps",id:"preparation-steps",children:[]},{value:"Silta-cluster chart requirements",id:"silta-cluster-chart-requirements",children:[]}]},{value:"Missing functionality",id:"missing-functionality",children:[]},{value:"Deployment specifics",id:"deployment-specifics",children:[]}],c={toc:s};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"amazon-web-services-compatibility"},"Amazon Web Services compatibility"),Object(i.b)("p",null,"Silta is mostly AWS compatible, there are some requirements for environments deployed to EKS cluster."),Object(i.b)("h2",{id:"cluster-requirements"},"Cluster requirements"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Ingress-nginx as the Ingress choice"),Object(i.b)("li",{parentName:"ul"},"Amazon VPC CNI plugin for NetworkPolicy"),Object(i.b)("li",{parentName:"ul"},"Amazon EBS CSI Driver plugin for default storage class (gp2)")),Object(i.b)("h3",{id:"preparation-steps"},"Preparation steps"),Object(i.b)("p",null,"On new, empty cluster, before installing silta-cluster chart:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Install Amazon VPC CNI plugin (plugins are located in EKS -> cluster > Add-ons tab)"),Object(i.b)("li",{parentName:"ol"},"Install Amazon EBC CSI Driver plugin"),Object(i.b)("li",{parentName:"ol"},"Create and attach IAM role to worker nodes with these permissions:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"AmazonEC2ContainerRegistryFullAccess"),Object(i.b)("li",{parentName:"ul"},"AmazonEC2FullAccess"),Object(i.b)("li",{parentName:"ul"},"AmazonEKSWorkerNodePolicy"),Object(i.b)("li",{parentName:"ul"},"AmazonElasticFileSystemFullAccess"),Object(i.b)("li",{parentName:"ul"},"AmazonS3FullAccess")))),Object(i.b)("h3",{id:"silta-cluster-chart-requirements"},"Silta-cluster chart requirements"),Object(i.b)("p",null,"Enabling proxy protocol over ingress-nginx, for passing client IP to pods:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},'  ingress-nginx:\n    config:\n      use-proxy-protocol: true\n    service:\n      annotations:\n        "service.beta.kubernetes.io/aws-load-balancer-proxy-protocol": "*"\n')),Object(i.b)("p",null,"SSH uses NLB as ingress point. Apply these annotations:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},'gitAuth:\n  enabled: true\n  scope: \'https://github.com/wunderio\'\n  annotations:\n    "service.beta.kubernetes.io/aws-load-balancer-backend-protocol": "tcp"\n    "service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout": "60"\n    # "service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled": "true"\n    "service.beta.kubernetes.io/aws-load-balancer-type": "nlb"\n    # the length of the list must be equal to the number of subnets\n    "service.beta.kubernetes.io/aws-load-balancer-eip-allocations": "<elastic IP id>"\n    "service.beta.kubernetes.io/aws-load-balancer-subnets": "<subnet name here"\n    "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type": "instance"\n    "service.beta.kubernetes.io/aws-load-balancer-ip-address-type": "ipv4"\n    "service.beta.kubernetes.io/aws-load-balancer-target-group-attributes": "stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true"\n')),Object(i.b)("p",null,"For NLB, it is required to have 1 Elastic IP per subnet (defined by Availability Zones)"),Object(i.b)("p",null,"EIP Allocation ID is in Network & Security -> Elastic IPs "),Object(i.b)("p",null,"Subnet names are in VPC Dashboard -> Virtual Private Cloud -> Subnets"),Object(i.b)("p",null,"There are few more requirements listed on ",Object(i.b)("a",{parentName:"p",href:"https://github.com/wunderio/charts/tree/master/silta-cluster#requirements"},"silta-cluster chart page"),", those are common for all silta-cluster installations "),Object(i.b)("h2",{id:"missing-functionality"},"Missing functionality"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"NLB for HTTP/HTTPS ingress")),Object(i.b)("h2",{id:"deployment-specifics"},"Deployment specifics"),Object(i.b)("p",null,"There is no extra configuration required for basic deployments. The only change would be ",Object(i.b)("inlineCode",{parentName:"p"},"cluster.type")," but it's normally overridden in CI pipeline."),Object(i.b)("p",null,"Drupal, frontend and simple charts:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"cluster:\n  type: aws\n")))}u.isMDXComponent=!0}}]);