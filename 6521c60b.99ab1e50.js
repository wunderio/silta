(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return d}));var i=n(0),a=n.n(i);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),p=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=p(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},O=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,r=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),s=p(n),O=i,d=s["".concat(r,".").concat(O)]||s[O]||u[O]||l;return n?a.a.createElement(d,c(c({ref:t},b),{},{components:n})):a.a.createElement(d,c({ref:t},b))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=O;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:i,r[1]=c;for(var b=2;b<l;b++)r[b]=n[b];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"},82:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return p}));var i=n(3),a=n(7),l=(n(0),n(106)),r={},c={unversionedId:"circleci-context",id:"circleci-context",isDocsHomePage:!1,title:"circleci-context",description:"Silta CircleCI Context variables",source:"@site/docs/circleci-context.md",slug:"/circleci-context",permalink:"/silta/docs/circleci-context",editUrl:"https://github.com/wunderio/silta/tree/master/docs/circleci-context.md",version:"current"},o=[{value:"Silta CircleCI Context variables",id:"silta-circleci-context-variables",children:[{value:"Kubernetes cluster connection data",id:"kubernetes-cluster-connection-data",children:[]},{value:"Chart variables (drupal, simple, frontend)",id:"chart-variables-drupal-simple-frontend",children:[]},{value:"Container image registry",id:"container-image-registry",children:[]},{value:"Silta dashboard RBAC creation",id:"silta-dashboard-rbac-creation",children:[]},{value:"CircleCI connection proxy (optional)",id:"circleci-connection-proxy-optional",children:[]},{value:"Deprecation list:",id:"deprecation-list",children:[]},{value:"Deprecated (if you see these in your context, You can remove them)",id:"deprecated-if-you-see-these-in-your-context-you-can-remove-them",children:[]}]}],b={toc:o};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(i.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"silta-circleci-context-variables"},"Silta CircleCI Context variables"),Object(l.b)("h3",{id:"kubernetes-cluster-connection-data"},"Kubernetes cluster connection data"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"CLUSTER_NAME"),": Used for kubernetes connection. Example: ",Object(l.b)("inlineCode",{parentName:"li"},"silta"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"KUBECTL_CONFIG"),": Optional when dashboard rbac autocreation is used. Otherwise required, contains kubectl config file contents."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"KUBECONFIG"),": Optional, defaults to ",Object(l.b)("inlineCode",{parentName:"li"},"~/.kube/config"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"CLUSTER_TYPE")," Options: ",Object(l.b)("inlineCode",{parentName:"li"},"aks"),", ",Object(l.b)("inlineCode",{parentName:"li"},"eks"),", ",Object(l.b)("inlineCode",{parentName:"li"},"minikube"),", ",Object(l.b)("inlineCode",{parentName:"li"},"microk8s"),". Default value: ",Object(l.b)("inlineCode",{parentName:"li"},"gke"),".")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Cluster connection, GKE specifics")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"USE_GKE_GCLOUD_AUTH_PLUGIN"),": Mandatory for GKE clusters <1.26, set to ",Object(l.b)("inlineCode",{parentName:"li"},"True"),".")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Used for gcloud authentication when environment variables are available (when kubectl config is undefined)")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"GCLOUD_PROJECT_NAME"),": GCP project name. Example: ",Object(l.b)("inlineCode",{parentName:"li"},"silta-test-123456"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"GCLOUD_COMPUTE_REGION"),": Optional. Example: ",Object(l.b)("inlineCode",{parentName:"li"},"europe-north1"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"GCLOUD_COMPUTE_ZONE"),": Optional. Example ",Object(l.b)("inlineCode",{parentName:"li"},"europe-north1-a"),".")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Cluster connection, AKS specifics")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"AKS_RESOURCE_GROUP"),": Example: ",Object(l.b)("inlineCode",{parentName:"li"},"siltaResourceGroup"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"AKS_SP_APP_ID"),": ServicePrincipal Application ID."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"AKS_SP_PASSWORD")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"AKS_TENANT_ID"))),Object(l.b)("h3",{id:"chart-variables-drupal-simple-frontend"},"Chart variables (drupal, simple, frontend)"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"CLUSTER_DOMAIN"),": Used as base domain for deployments. Example: ",Object(l.b)("inlineCode",{parentName:"li"},"silta-test.wdr.io"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"DB_ROOT_PASS"),": MySQL DB password. Used on first deployment for account creation and for connection. Do not change after site is deployed!"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"DB_USER_PASS"),": MySQL DB password. Used on first deployment for account creation and for connection. Do not change after site is deployed!"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"SECRET_KEY"),": Used for secrets encryption. Do not change without re-encoding secrets with the new key or deploymens will fail."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"GITAUTH_USERNAME"),": Used for getting list of allowed ssh keys. See ",Object(l.b)("inlineCode",{parentName:"li"},"gitAuth.keyserver")," ",Object(l.b)("a",{parentName:"li",href:"https://github.com/wunderio/charts/blob/master/silta-cluster/values.yaml"},"variables in ",Object(l.b)("inlineCode",{parentName:"a"},"silta-cluster")," chart")," for more details."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"GITAUTH_PASSWORD"),": Used for getting list of allowed ssh keys. See ",Object(l.b)("inlineCode",{parentName:"li"},"gitAuth.keyserver")," ",Object(l.b)("a",{parentName:"li",href:"https://github.com/wunderio/charts/blob/master/silta-cluster/values.yaml"},"variables in ",Object(l.b)("inlineCode",{parentName:"a"},"silta-cluster")," chart")," for more details."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"VPN_IP"),": Injected into nginx.noauthips variables for allowlisting basic auth requests."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"VPC_NATIVE"),": Adds vpc native (NEG) annotation for GKE clusters (cloud.google.com/neg). Set to ",Object(l.b)("inlineCode",{parentName:"li"},"true")," on GKE. ")),Object(l.b)("h3",{id:"container-image-registry"},"Container image registry"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"IMAGE_REPO_HOST"),": Example: ",Object(l.b)("inlineCode",{parentName:"li"},"europe-north1-docker.pkg.dev"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"DOCKER_REPO_HOST"),": Use ",Object(l.b)("inlineCode",{parentName:"li"},"IMAGE_REPO_HOST")," instead!"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"DOCKER_REPO_PROJ"),": Example: ",Object(l.b)("inlineCode",{parentName:"li"},"silta-test-123456/images"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"IMAGE_PULL_SECRET"),": Optional. Allows passing base64 encoded docker registry secret to deployment.")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Image registry, GCR & AR specifics")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"GOOGLE_APPLICATION_CREDENTIALS"),": Example: ",Object(l.b)("inlineCode",{parentName:"li"},"/home/circleci/gcp-service-key.json"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"GCLOUD_KEY_JSON"),': Plaintex serviceaccount key, newlines replaced with "\\n".'),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"SILTA_USE_GCLOUD"),": Force using gcloud cli for existing image lookups. Will be removed soon.")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Image registry, ACR specifics"),"\nNote: This uses ",Object(l.b)("inlineCode",{parentName:"p"},"az login")," currently, change in progress."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"AKS_RESOURCE_GROUP"),": Example: ",Object(l.b)("inlineCode",{parentName:"li"},"siltaResourceGroup"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"AKS_SP_APP_ID"),": ServicePrincipal Application ID."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"AKS_SP_PASSWORD")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"AKS_TENANT_ID"))),Object(l.b)("h3",{id:"silta-dashboard-rbac-creation"},"Silta dashboard RBAC creation"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"SILTA_CLUSTER_ID"),": Dashboard configuration machine name. Example: ",Object(l.b)("inlineCode",{parentName:"li"},"silta_test"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"SILTA_DASHBOARD_URL"),": Dashboard url. Basicauth in url (or proxy ip/cloud nat + whitelist). Example: ",Object(l.b)("inlineCode",{parentName:"li"},"https://username:password@master.silta-dashboard.[cluster-domain]"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"SILTA_DASHBOARD_KEY"),": Required for dashboard rbac creation, can be found in dashboard settings."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"${SILTA_CLUSTER_ID}_KUBECTL_CONFIG"),": Normally does not exist in context, but rather in project's environment variables. Variable is injected by Silta Dashboard.")),Object(l.b)("h3",{id:"circleci-connection-proxy-optional"},"CircleCI connection proxy (optional)"),Object(l.b)("p",null,"Allows connecting to cluster via ssh jumphost. Does not work with all projects (some npm installs fail)."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"TUNNEL_USER_HOST"),": ssh jumphost user. Example: ",Object(l.b)("inlineCode",{parentName:"li"},"user@ssh.example.com"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"TUNNEL_PRIVATE_KEY"),": Private key of jumphost user, replace newlines with \\n.")),Object(l.b)("h3",{id:"deprecation-list"},"Deprecation list:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"VPC_NATIVE"),": Adds vpc native (NEG) annotation for GKE clusters (cloud.google.com/neg). This should be set to ",Object(l.b)("inlineCode",{parentName:"li"},"true")," in charts by default now since all new clusters are vpc native and all gke clusters we deal with are vpc native. "),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"DOCKER_REPO_PROJ"),": Implement ",Object(l.b)("inlineCode",{parentName:"li"},"IMAGE_REPO_PROJ"),", set this as a fallback."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"SILTA_USE_GCLOUD"),": Force using gcloud cli for existing image lookups. This can be removed since build images without gcloud are used by default now.")),Object(l.b)("h3",{id:"deprecated-if-you-see-these-in-your-context-you-can-remove-them"},"Deprecated (if you see these in your context, You can remove them)"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"DOCKER_REPO_ORG")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"DOCKER_REPO_URL")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"DOCKER_PASSWORD")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"DOCKER_USER")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"GCLOUD_EMAIL")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"GCLOUD_CLUSTER_NAME")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"SLACK_ACCESS_TOKEN"))))}p.isMDXComponent=!0}}]);