"use strict";(self.webpackChunksilta_docs=self.webpackChunksilta_docs||[]).push([[122],{8419:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"circleci-context","title":"circleci-context","description":"Silta CircleCI Context variables","source":"@site/docs/circleci-context.md","sourceDirName":".","slug":"/circleci-context","permalink":"/silta/docs/circleci-context","draft":false,"unlisted":false,"editUrl":"https://github.com/wunderio/silta/tree/master/docs/circleci-context.md","tags":[],"version":"current","frontMatter":{}}');var c=i(4848),l=i(8453);const r={},o=void 0,d={},t=[{value:"Silta CircleCI Context variables",id:"silta-circleci-context-variables",level:2},{value:"Kubernetes cluster connection data",id:"kubernetes-cluster-connection-data",level:3},{value:"Chart variables (drupal, simple, frontend)",id:"chart-variables-drupal-simple-frontend",level:3},{value:"Container image registry",id:"container-image-registry",level:3},{value:"Silta dashboard RBAC creation",id:"silta-dashboard-rbac-creation",level:3},{value:"CircleCI connection proxy (optional)",id:"circleci-connection-proxy-optional",level:3},{value:"Deprecation list:",id:"deprecation-list",level:3},{value:"Deprecated (if you see these in your context, You can remove them)",id:"deprecated-if-you-see-these-in-your-context-you-can-remove-them",level:3}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"silta-circleci-context-variables",children:"Silta CircleCI Context variables"}),"\n",(0,c.jsx)(n.h3,{id:"kubernetes-cluster-connection-data",children:"Kubernetes cluster connection data"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"CLUSTER_NAME"}),": Used for kubernetes connection. Example: ",(0,c.jsx)(n.code,{children:"silta"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"KUBECTL_CONFIG"}),": Optional when dashboard rbac autocreation is used. Otherwise required, contains kubectl config file contents."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"KUBECONFIG"}),": Optional, defaults to ",(0,c.jsx)(n.code,{children:"~/.kube/config"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"CLUSTER_TYPE"}),": Options: ",(0,c.jsx)(n.code,{children:"aks"}),", ",(0,c.jsx)(n.code,{children:"eks"}),", ",(0,c.jsx)(n.code,{children:"minikube"}),", ",(0,c.jsx)(n.code,{children:"microk8s"}),". Default value: ",(0,c.jsx)(n.code,{children:"gke"}),"."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Cluster connection, GKE specifics"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"USE_GKE_GCLOUD_AUTH_PLUGIN"}),": Mandatory for GKE clusters ",(0,c.jsx)(n.code,{children:"<1.26"}),", set to ",(0,c.jsx)(n.code,{children:"True"}),"."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Used for gcloud authentication when environment variables are available (when kubectl config is undefined)"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"GCLOUD_PROJECT_NAME"}),": GCP project name. Example: ",(0,c.jsx)(n.code,{children:"silta-test-123456"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"GCLOUD_COMPUTE_REGION"}),": Optional. Example: ",(0,c.jsx)(n.code,{children:"europe-north1"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"GCLOUD_COMPUTE_ZONE"}),": Optional. Example: ",(0,c.jsx)(n.code,{children:"europe-north1-a"}),"."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Cluster connection, AKS specifics"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"AKS_RESOURCE_GROUP"}),": Example: ",(0,c.jsx)(n.code,{children:"siltaResourceGroup"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"AKS_SP_APP_ID"}),": ServicePrincipal Application ID."]}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"AKS_SP_PASSWORD"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"AKS_TENANT_ID"})}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"chart-variables-drupal-simple-frontend",children:"Chart variables (drupal, simple, frontend)"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"CLUSTER_DOMAIN"}),": Used as base domain for deployments. Example: ",(0,c.jsx)(n.code,{children:"silta-test.wdr.io"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"DB_ROOT_PASS"}),": MySQL DB password. Used on first deployment for account creation and for connection. Do not change after site is deployed!"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"DB_USER_PASS"}),": MySQL DB password. Used on first deployment for account creation and for connection. Do not change after site is deployed!"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"SECRET_KEY"}),": Used for secrets encryption. Do not change without re-encoding secrets with the new key or deployments will fail."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"GITAUTH_USERNAME"}),": Used for getting list of allowed ssh keys. See ",(0,c.jsx)(n.code,{children:"gitAuth.keyserver"})," ",(0,c.jsxs)(n.a,{href:"https://github.com/wunderio/charts/blob/master/silta-cluster/values.yaml",children:["variables in ",(0,c.jsx)(n.code,{children:"silta-cluster"})," chart"]})," for more details."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"GITAUTH_PASSWORD"}),": Used for getting list of allowed ssh keys. See ",(0,c.jsx)(n.code,{children:"gitAuth.keyserver"})," ",(0,c.jsxs)(n.a,{href:"https://github.com/wunderio/charts/blob/master/silta-cluster/values.yaml",children:["variables in ",(0,c.jsx)(n.code,{children:"silta-cluster"})," chart"]})," for more details."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"VPN_IP"}),": Injected into nginx.noauthips variables for allowlisting basic auth requests."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"VPC_NATIVE"}),": Adds vpc native (NEG) annotation for GKE clusters (cloud.google.com/neg). Set to ",(0,c.jsx)(n.code,{children:"true"})," on GKE."]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"container-image-registry",children:"Container image registry"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"IMAGE_REPO_HOST"}),": Example: ",(0,c.jsx)(n.code,{children:"europe-north1-docker.pkg.dev"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"DOCKER_REPO_HOST"}),": Use ",(0,c.jsx)(n.code,{children:"IMAGE_REPO_HOST"})," instead!"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"DOCKER_REPO_PROJ"}),": Example: ",(0,c.jsx)(n.code,{children:"silta-test-123456/images"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"IMAGE_PULL_SECRET"}),": Optional. Allows passing base64 encoded docker registry secret to deployment."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Image registry, GCR & AR specifics"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"GOOGLE_APPLICATION_CREDENTIALS"}),": Example: ",(0,c.jsx)(n.code,{children:"/home/circleci/gcp-service-key.json"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"GCLOUD_KEY_JSON"}),': Plaintext serviceaccount key, newlines replaced with "\\n".']}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"SILTA_USE_GCLOUD"}),": Force using gcloud cli for existing image lookups. Will be removed soon."]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Image registry, ACR specifics"}),"\nNote: This uses ",(0,c.jsx)(n.code,{children:"az login"})," currently, change in progress."]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"AKS_RESOURCE_GROUP"}),": Example: ",(0,c.jsx)(n.code,{children:"siltaResourceGroup"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"AKS_SP_APP_ID"}),": ServicePrincipal Application ID."]}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"AKS_SP_PASSWORD"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"AKS_TENANT_ID"})}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"silta-dashboard-rbac-creation",children:"Silta dashboard RBAC creation"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"SILTA_CLUSTER_ID"}),": Dashboard configuration machine name. Example: ",(0,c.jsx)(n.code,{children:"silta_test"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"SILTA_DASHBOARD_URL"}),": Dashboard url. Basicauth in url (or proxy ip/cloud nat + whitelist). Example: ",(0,c.jsx)(n.code,{children:"https://username:password@master.silta-dashboard.[cluster-domain]"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"SILTA_DASHBOARD_KEY"}),": Required for dashboard rbac creation, can be found in dashboard settings."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"${SILTA_CLUSTER_ID}_KUBECTL_CONFIG"}),": Normally does not exist in context, but rather in project's environment variables. Variable is injected by Silta Dashboard."]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"circleci-connection-proxy-optional",children:"CircleCI connection proxy (optional)"}),"\n",(0,c.jsx)(n.p,{children:"Allows connecting to cluster via ssh jumphost. Does not work with all projects (some npm installs fail)."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"TUNNEL_USER_HOST"}),": ssh jumphost user. Example: ",(0,c.jsx)(n.code,{children:"user@ssh.example.com"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"TUNNEL_PRIVATE_KEY"}),": Private key of jumphost user, replace newlines with \\n."]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"deprecation-list",children:"Deprecation list:"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"VPC_NATIVE"}),": Adds vpc native (NEG) annotation for GKE clusters (cloud.google.com/neg). This should be set to ",(0,c.jsx)(n.code,{children:"true"})," in charts by default now since all new clusters are vpc native and all gke clusters we deal with are vpc native."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"DOCKER_REPO_PROJ"}),": Implement ",(0,c.jsx)(n.code,{children:"IMAGE_REPO_PROJ"}),", set this as a fallback."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"SILTA_USE_GCLOUD"}),": Force using gcloud cli for existing image lookups. This can be removed since build images without gcloud are used by default now."]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"deprecated-if-you-see-these-in-your-context-you-can-remove-them",children:"Deprecated (if you see these in your context, You can remove them)"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"DOCKER_REPO_ORG"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"DOCKER_REPO_URL"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"DOCKER_PASSWORD"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"DOCKER_USER"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"GCLOUD_EMAIL"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"GCLOUD_CLUSTER_NAME"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"SLACK_ACCESS_TOKEN"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(6540);const c={},l=s.createContext(c);function r(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);