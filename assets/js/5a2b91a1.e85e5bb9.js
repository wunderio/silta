"use strict";(self.webpackChunksilta_docs=self.webpackChunksilta_docs||[]).push([[685],{6810:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"silta-examples","title":"Silta examples","description":"silta.yml configuration examples","source":"@site/docs/silta-examples.md","sourceDirName":".","slug":"/silta-examples","permalink":"/silta/docs/silta-examples","draft":false,"unlisted":false,"editUrl":"https://github.com/wunderio/silta/tree/master/docs/silta-examples.md","tags":[],"version":"current","frontMatter":{"id":"silta-examples","title":"Silta examples"},"sidebar":"someSidebar","previous":{"title":"Configuring CDN","permalink":"/silta/docs/configuring-cdn"},"next":{"title":"Troubleshooting","permalink":"/silta/docs/troubleshooting"}}');var a=s(4848),r=s(8453);const t={id:"silta-examples",title:"Silta examples"},o=void 0,l={},c=[{value:"silta.yml configuration examples",id:"siltayml-configuration-examples",level:2},{value:"Allocate more storage for your database.",id:"allocate-more-storage-for-your-database",level:2},{value:"Using different version of MariaDB than provided in chart defaults.",id:"using-different-version-of-mariadb-than-provided-in-chart-defaults",level:2},{value:"Mount Drupal public files to a different location",id:"mount-drupal-public-files-to-a-different-location",level:2},{value:"Enabling private files for drupal",id:"enabling-private-files-for-drupal",level:2},{value:"Change how often the standard Drupal cron is executed",id:"change-how-often-the-standard-drupal-cron-is-executed",level:2},{value:"Deploy a custom service using frontend chart",id:"deploy-a-custom-service-using-frontend-chart",level:2},{value:"Run a custom cron job",id:"run-a-custom-cron-job",level:2},{value:"Add additional environment variables",id:"add-additional-environment-variables",level:2},{value:"Change basic auth username and password",id:"change-basic-auth-username-and-password",level:2},{value:"Enable elasticsearch",id:"enable-elasticsearch",level:2},{value:"Using plugins with Elasticsearch",id:"using-plugins-with-elasticsearch",level:2},{value:"Enable memcached",id:"enable-memcached",level:2},{value:"Using varnish",id:"using-varnish",level:2},{value:"Using Redis",id:"using-redis",level:2},{value:"Skip taking reference data dumps on each deployment",id:"skip-taking-reference-data-dumps-on-each-deployment",level:2},{value:"Sending e-mail",id:"sending-e-mail",level:2},{value:"Domain names and SSL certificates",id:"domain-names-and-ssl-certificates",level:2},{value:"Add redirects",id:"add-redirects",level:2},{value:"<code>from</code>",id:"from",level:4},{value:"<code>to</code>",id:"to",level:4},{value:"Allowing cross-namespace / cross-deployment connections",id:"allowing-cross-namespace--cross-deployment-connections",level:2},{value:"Configure security context for frontend services",id:"configure-security-context-for-frontend-services",level:2},{value:"Security Context Properties",id:"security-context-properties",level:3},{value:"Common Use Cases",id:"common-use-cases",level:3},{value:"Add custom include files for nginx",id:"add-custom-include-files-for-nginx",level:2},{value:"Deploy sub-project from the same repo using simple chart",id:"deploy-sub-project-from-the-same-repo-using-simple-chart",level:2},{value:"Add custom subcharts to deployment",id:"add-custom-subcharts-to-deployment",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"siltayml-configuration-examples",children:"silta.yml configuration examples"}),"\n",(0,a.jsx)(n.p,{children:"The default values are documented here:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Drupal chart: ",(0,a.jsx)(n.a,{href:"https://github.com/wunderio/charts/blob/master/drupal/values.yaml",children:"https://github.com/wunderio/charts/blob/master/drupal/values.yaml"})]}),"\n",(0,a.jsxs)(n.li,{children:["Frontend chart: ",(0,a.jsx)(n.a,{href:"https://github.com/wunderio/charts/blob/master/frontend/values.yaml",children:"https://github.com/wunderio/charts/blob/master/frontend/values.yaml"})]}),"\n",(0,a.jsxs)(n.li,{children:["Simple chart: ",(0,a.jsx)(n.a,{href:"https://github.com/wunderio/charts/blob/master/simple/values.yaml",children:"https://github.com/wunderio/charts/blob/master/simple/values.yaml"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Below is a list of examples for common needs.\nAll examples are meant to be used in the ",(0,a.jsx)(n.code,{children:"silta.yml"})," file of your project. Most of the examples work with both drupal chart and frontend chart, unless name is explicitly mentioned above the code snippet. Double-check with default value files for each chart - ",(0,a.jsx)(n.a,{href:"https://github.com/wunderio/charts/blob/master/drupal/values.yaml",children:"drupal"})," and ",(0,a.jsx)(n.a,{href:"https://github.com/wunderio/charts/blob/master/frontend/values.yaml",children:"frontend"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Also note that increasing resources will result in increased costs, so use sensible values."}),"\n",(0,a.jsx)(n.h2,{id:"allocate-more-storage-for-your-database",children:"Allocate more storage for your database."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"mariadb:\n  master:\n    persistence:\n      size: 2G\n"})}),"\n",(0,a.jsx)(n.p,{children:"Note that storage can only be increased, not decreased."}),"\n",(0,a.jsxs)(n.p,{children:["Note 2: If you change it for existing deployment, You'll need to run special comands in cluster to expand the storage or deployment will fail (see ",(0,a.jsx)(n.a,{href:"/silta/docs/troubleshooting#mariadb-or-elasticsearch-running-out-of-disk-space",children:"Mariadb or Elasticsearch running out of disk space"})," in troubleshooting page)."]}),"\n",(0,a.jsx)(n.h2,{id:"using-different-version-of-mariadb-than-provided-in-chart-defaults",children:"Using different version of MariaDB than provided in chart defaults."}),"\n",(0,a.jsx)(n.p,{children:"While it's normally not advised, it's possible to adjust MariaDB image version -"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart and Frontend chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"mariadb:\n  image:\n    # Available image tags listed at https://hub.docker.com/r/bitnami/mariadb/tags. Use debian images.\n    # tag: 10.10.6-debian-11-r25\n    # tag: 10.11.5-debian-11-r24\n    tag: 11.0.3-debian-11-r25\n"})}),"\n",(0,a.jsx)(n.p,{children:"It's highly suggested to create mysql data backup before image change."}),"\n",(0,a.jsx)(n.p,{children:"Note: Do not change image to an earlier version, it may break the data."}),"\n",(0,a.jsx)(n.h2,{id:"mount-drupal-public-files-to-a-different-location",children:"Mount Drupal public files to a different location"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"mounts:\n  public-files:\n    mountPath: `/app/web/sites/my-other-location/files`\n"})}),"\n",(0,a.jsx)(n.h2,{id:"enabling-private-files-for-drupal",children:"Enabling private files for drupal"}),"\n",(0,a.jsx)(n.p,{children:"There is a pre-built mount template for drupal private file storage in silta (check values.yaml), you just have to enable it"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"mounts:\n  private-files:\n    enabled: true\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Enabling this will mount shared storage to ",(0,a.jsx)(n.code,{children:"/app/private"})," and set ",(0,a.jsx)(n.code,{children:"$settings['file_private_path']"})," accordingly. See chart values for override parameters."]}),"\n",(0,a.jsx)(n.h2,{id:"change-how-often-the-standard-drupal-cron-is-executed",children:"Change how often the standard Drupal cron is executed"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'php:\n  cron:\n    drupal:\n      # Run every 5 minutes\n      schedule: "*/5 * * * *"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"deploy-a-custom-service-using-frontend-chart",children:"Deploy a custom service using frontend chart"}),"\n",(0,a.jsx)(n.p,{children:'While Frontend chart was originally meant to host NodeJS frontend projects, it also allows running custom docker images and optionally exposing them via nginx reverse proxy. These containers are called "services" in Frontend chart.'}),"\n",(0,a.jsx)(n.p,{children:'In this example, we are setting up two custom services - "mynodeservice" that will use a custom built image (see circleci configuration below) and "mongo" that will use prebuilt mongodb docker imageservice.'}),"\n",(0,a.jsx)(n.p,{children:'Note: This ".Values.services.mongo" service is not the same as ".Values.mongodb", it\'s just an example.'}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Frontend chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'services:\n  mynodeservice:\n    replicas: 1\n    port: 3000\n    env:\n      VARIABLE: "VALUE"\n    # Exposed at [hostname]/servicepath\n    exposedRoute: "/servicepath"\n\n  mongo:\n    # Mongo image does not need to be built,\n    # uses https://hub.docker.com/_/mongo\n    image: mongo\n    port: 27017\n'})}),"\n",(0,a.jsxs)(n.p,{children:["See ",(0,a.jsx)(n.code,{children:".Values.serviceDefaults"})," for service default values."]}),"\n",(0,a.jsxs)(n.p,{children:["Service images are built at ",(0,a.jsx)(n.code,{children:".circleci/config.yaml"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'workflows:\n  build_deploy:\n    jobs:\n      - silta/frontend-build-deploy: &build-deploy\n          image_build_steps:\n            - silta/build-docker-image:\n                dockerfile: "silta/mynodeservice.Dockerfile"\n                path: "."\n                identifier: "mynodeservice"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["It is very important to understand kubernetes containers are stateless, the moment container gets restarted, it will reset the storage to contents of docker image. To persist some particular filesystem path, you need to define persistent storage at ",(0,a.jsx)(n.code,{children:".Values.mounts"})," and attach it to the service (this only applies to containers defined at ",(0,a.jsx)(n.code,{children:".Values.services"})," since other applications (",(0,a.jsx)(n.code,{children:".Values.mongodb"}),", ",(0,a.jsx)(n.code,{children:".Values.mariadb"}),", etc.) have default configurations in chart that persist data)."]}),"\n",(0,a.jsx)(n.p,{children:'In this example, we are setting up a custom "mongo" service that will use prebuilt mongodb docker imageservice.'}),"\n",(0,a.jsx)(n.p,{children:'Note: This ".Values.services.mongo" service is not the same as ".Values.mongodb", it\'s just an example.'}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Frontend chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"services:\n  mongo:\n    # Mongo image does not need to be built,\n    # uses https://hub.docker.com/_/mongo\n    image: mongo\n    port: 27017\n    mounts:\n      - mongodb-data\n    strategy:\n      type: Recreate\n\nmounts:\n  mongodb-data:\n    enabled: true\n    storage: 5Gi\n    mountPath: /data/db\n    # GKE storage class\n    storageClassName: standard\n    accessModes: ReadWriteOnce\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"storageClassName"})," is only available on GKE. AWS and other cloud providers have different storageclasses, so it depends on cloud provider. There are several options and they differ by access (read / write) speed. ",(0,a.jsx)(n.code,{children:"standard"})," is a safe choice."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"accessModes"})," depends on storageClass. ",(0,a.jsx)(n.code,{children:"standard"})," on GKE provides ",(0,a.jsx)(n.code,{children:"ReadWriteOnce"}),". See ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes",children:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes"})," for more information"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:".Values.services.mongo.strategy.type: Recreate"}),' is required for "read write once" type storage mounts, because they only allow mounting storage once, but default strategy for services is ',(0,a.jsx)(n.code,{children:"RollingUpdate"})," and it would fail deployment. See ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy",children:"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy"})," for more information."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"run-a-custom-cron-job",children:"Run a custom cron job"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'php:\n  cron:\n    my-custom-cron-job:\n      # Run a custom drush command at midnight\n      schedule: "0 0 * * *"\n      command: "drush my-custom-command"\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Frontend chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'services:\n  myservice:\n    cron:\n      my-custom-cron-job:\n        # Run a custom command at midnight\n        schedule: "0 0 * * *"\n        command: "my-custom-command"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"add-additional-environment-variables",children:"Add additional environment variables"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'php:\n  env:\n    MY_VARIABLE_NAME: "theValueOfMyVariable"\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Frontend chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'services:\n  myservice:\n    env:\n      MY_VARIABLE_NAME: "theValueOfMyVariable"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"change-basic-auth-username-and-password",children:"Change basic auth username and password"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart and Frontend chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"nginx:\n  basicauth:\n    credentials:\n      username: hello\n      password: My$ecretP4ssw0rd\n"})}),"\n",(0,a.jsx)(n.h2,{id:"enable-elasticsearch",children:"Enable elasticsearch"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart and Frontend chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"elasticsearch:\n  enabled: true\n"})}),"\n",(0,a.jsx)(n.h2,{id:"using-plugins-with-elasticsearch",children:"Using plugins with Elasticsearch"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create a custom elasticsearch dockerfile to silta/elasticsearch.Dockerfile:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"ARG ES_VERSION=7.17.0\nFROM docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}\nARG ES_VERSION\n\nUSER root\n\n# Install Elasticsearch plugins\nRUN elasticsearch-plugin install analysis-icu\n\nUSER elasticsearch\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Build the custom Elasticsearch image in CircleCI:"})}),"\n",(0,a.jsxs)(n.p,{children:["When using ",(0,a.jsx)(n.code,{children:"silta/drupal-build-deploy"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"      - silta/drupal-build-deploy:\n          pre-release:\n            - silta/build-docker-image:\n                dockerfile: silta/elasticsearch.Dockerfile\n                tag: with-plugins\n                identifier: elasticsearch\n                expose_image: false\n"})}),"\n",(0,a.jsxs)(n.p,{children:["When using ",(0,a.jsx)(n.code,{children:"silta/frontend-build-deploy"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"      - silta/frontend-build-deploy:\n          image_build_steps:\n            - silta/build-docker-image:\n                dockerfile: silta/elasticsearch.Dockerfile\n                tag: with-plugins\n                identifier: elasticsearch\n                expose_image: false\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Use the custom elasticsearch image in your silta helm charts file:"})}),"\n",(0,a.jsx)(n.p,{children:"The container URL could be found in the CircleCI container build information."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"elasticsearch:\n  enabled: true\n  image: <CONTAINER-URL>\n  imageTag: 'with-plugins'\n  imagePullPolicy: Always\n"})}),"\n",(0,a.jsx)(n.h2,{id:"enable-memcached",children:"Enable memcached"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"memcached:\n  enabled: true\n"})}),"\n",(0,a.jsx)(n.p,{children:"Adjust resources and arguments as needed"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"  resources:\n    requests:\n      cpu: 150m\n      memory: 1200M\n    limits:\n      cpu: 250m\n      memory: 1500M\n  arguments:\n    - /run.sh\n    # MaxMemoryLimit, this should be less than the resources.limits.memory, or memcached will crash.\n    - -m 1200\n    # MaxItemSize\n    - -I 16M\n"})}),"\n",(0,a.jsx)(n.p,{children:"Modify settings.php file (example is from D9)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"/**\n * Set the memcache server hostname when a memcached server is available.\n */\nif (getenv(\"SILTA_CLUSTER\") && getenv('MEMCACHED_HOST')) {\n  $settings['memcache']['servers'] = [getenv('MEMCACHED_HOST') . ':11211' => 'default'];\n\n  // Set the default cache backend to use memcache if memcache host is set and\n  // if one of the memcache libraries was found. Cache backends should not be\n  // set to memcache during installation. The existence of the memcache drupal\n  // module should also be checked but this is not possible until this issue\n  // has been fixed: https://www.drupal.org/project/drupal/issues/2766509\n  if (!InstallerKernel::installationAttempted() && (class_exists('Memcache', FALSE) || class_exists('Memcached', FALSE))) {\n    $settings['cache']['default'] = 'cache.backend.memcache';\n  }\n\n  /**\n   * Memcache configuration.\n   */\n  if (class_exists('Memcached', FALSE)) {\n    $settings['memcache']['extension'] = 'Memcached';\n    // Memcached PECL Extension Support.\n    $settings['memcache']['options'] = [\n      // Enable compression for PHP 7.\n      \\Memcached::OPT_COMPRESSION => TRUE,\n      \\Memcached::OPT_DISTRIBUTION => \\Memcached::DISTRIBUTION_CONSISTENT,\n      // Decrease latency.\n      \\Memcached::OPT_TCP_NODELAY => TRUE,\n    ];\n  }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"For D7 use"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"  if (getenv('MEMCACHED_HOST')) {\n    if (class_exists('Memcache', FALSE) || class_exists('Memcached', FALSE)) {\n      $conf['memcache_servers'] = [getenv('MEMCACHED_HOST') . ':11211' => 'default'];\n    }\n  }\n"})}),"\n",(0,a.jsx)(n.h2,{id:"using-varnish",children:"Using varnish"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"varnish:\n  enabled: true\n"})}),"\n",(0,a.jsx)(n.p,{children:"If extra cookies are needed, they can be defined in a vcl_extra_cookies variable:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'varnish:\n  vcl_extra_cookies: |\n    if (req.http.Cookie ~ "extra_cookie_name") {\n      return (pass);\n    }\n'})}),"\n",(0,a.jsx)(n.p,{children:"When varnish is enabled in silta config, drupal configuration needs to be adjusted, so purge can find the varnish server."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["Using ",(0,a.jsx)(n.a,{href:"https://www.drupal.org/project/varnish",children:"varnish"})," module:"]})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"You should consider using purge module instead"}),"\nNo adjustments needed"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["Using ",(0,a.jsx)(n.a,{href:"https://www.drupal.org/project/varnish_purge",children:"varnish_purge"})," module:"]})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Add varnish purger to purge settings."}),"\n",(0,a.jsxs)(n.li,{children:["Find purger configuration name. You can see it by hovering over the configuration link (i.e. ",(0,a.jsx)(n.code,{children:"1b619ba479"}),"). This will be Your ",(0,a.jsx)(n.code,{children:"<PURGER_ID>"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Put this snippet into your ",(0,a.jsx)(n.code,{children:"settings.php"})," file:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"if (getenv('SILTA_CLUSTER') && getenv('VARNISH_ADMIN_HOST')) {\n  $config['varnish_purger.settings.<PURGER_ID>']['hostname'] = trim(getenv('VARNISH_ADMIN_HOST'));\n  $config['varnish_purger.settings.<PURGER_ID>']['port'] = '80';\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Make sure to replace ",(0,a.jsx)(n.code,{children:"<PURGER_ID>"})," with an actual id of purger configuration!"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Changing varnish default control-key value"})}),"\n",(0,a.jsxs)(n.p,{children:["This can be done by adding ",(0,a.jsx)(n.code,{children:"secret"})," variable."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'varnish:\n  secret: "my-secret-key"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Please remember: best practice is to encrypt secrets."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Changing varnish cache backend"})}),"\n",(0,a.jsx)(n.p,{children:"The current default cache backend is set to file storage. The setting is exposed in values file and can be changed. Here are few examples:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"varnish:\n  resources:\n    requests:\n      memory: 768Mi\n  # Memory allocated storage. Make sure to adjust varnish memory allocation too (see above)\n  storageBackend: 'malloc,512m'\n  # Disc allocated storage.\n  storageBackend: 'file,/var/lib/varnish/varnish_storage.bin,512M'\n"})}),"\n",(0,a.jsx)(n.h2,{id:"using-redis",children:"Using Redis"}),"\n",(0,a.jsx)(n.p,{children:"By default, redis service does not set max memory value. You can do it by setting flags:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'redis:\n  enabled: true\n  master:\n    persistence:\n      size: 2Gi\n    extraFlags:\n      - "--maxmemory-policy allkeys-lru"\n      - "--maxmemory 1700mb"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"skip-taking-reference-data-dumps-on-each-deployment",children:"Skip taking reference data dumps on each deployment"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"referenceData:\n  updateAfterDeployment: false\n"})}),"\n",(0,a.jsxs)(n.p,{children:["For some sites with a lot of files, taking a reference data dump after each deployment can cause the builds to time out. Disabling ",(0,a.jsx)(n.code,{children:"updateAfterDeployment"})," means new environments will be created with reference data from the previous nightly dump."]}),"\n",(0,a.jsx)(n.h2,{id:"sending-e-mail",children:"Sending e-mail"}),"\n",(0,a.jsx)(n.p,{children:"Note: There is no e-mail handling for frontend chart. You must implement the smtp workflow via application."}),"\n",(0,a.jsx)(n.p,{children:"If you just want to test email, you can use mailhog:"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"mailhog:\n  enabled: true\n"})}),"\n",(0,a.jsx)(n.p,{children:"Mailhog access information will be printed in release notes."}),"\n",(0,a.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,a.jsx)(n.strong,{children:"Deprecated"}),": ",(0,a.jsx)(n.em,{children:"mailhog"})," will be removed from future releases, use ",(0,a.jsx)(n.em,{children:"mailpit"})," instead (see below)"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:"To enabled mailpit in Drupal or Frontend charts use:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"mailpit:\n  enabled: true\n"})}),"\n",(0,a.jsx)(n.p,{children:"Mailpit access information will be printed in release notes."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:"For emails to be actually sent out of the cluster, you can use any external smtp server. Here's an example for sparkpost."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'smtp:\n  enabled: true\n  address: smtp.sparkpostmail.com:587 # or smtp.eu.sparkpost.com:587\n  tls: true\n  # When using smtp.office365.com:587 instead of sparkpost both tls and starttls need to be set to "YES".\n  # tls: "YES"\n  # starttls: "YES"\n  username: "SMTP_Injection"\n  # Encrypt this password. See: docs/encrypting_sensitive_configuration.md\n  # Please note that when using smtp.office365.com:587, password may not contain following special characters =, :, or #\n  password: "MYAPIKEY"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Note: To get the sparkpost API key, you have to ",(0,a.jsx)(n.a,{href:"https://www.sparkpost.com/docs/getting-started/setting-up-domains/",children:"validate your domain"})," first."]}),"\n",(0,a.jsxs)(n.p,{children:["Note 2: Because of ",(0,a.jsx)(n.a,{href:"https://serverfault.com/questions/826875/what-characters-are-illegal-in-password-in-ssmtp-conf",children:"long-standing bugs in the ssmtp package"}),", the smtp password cannot contain the special characters ",(0,a.jsx)(n.code,{children:"#"}),", ",(0,a.jsx)(n.code,{children:"="})," or ",(0,a.jsx)(n.code,{children:":"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["If the ",(0,a.jsx)(n.code,{children:"smtp"})," is configured and enabled, but it does not appear to send anything, make sure ",(0,a.jsx)(n.code,{children:"mailhog"})," or ",(0,a.jsx)(n.code,{children:"mailpit"})," is not enabled."]}),"\n",(0,a.jsx)(n.h2,{id:"domain-names-and-ssl-certificates",children:"Domain names and SSL certificates"}),"\n",(0,a.jsxs)(n.p,{children:["All environments are given a hostname by default. It is possible to attach a custom domain name to environment by configuring ",(0,a.jsx)(n.code,{children:"exposeDomains"})," configuration parameter. All hostnames attached to environment are printed in release notes.\nYou can also use ",(0,a.jsx)(n.code,{children:"letsencrypt-staging"})," issuer to avoid hitting ",(0,a.jsx)(n.code,{children:"letsencrypt"})," ",(0,a.jsx)(n.a,{href:"https://letsencrypt.org/docs/rate-limits/",children:"rate limits"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["!NB Deploy ",(0,a.jsx)(n.code,{children:"exposeDomains"})," entries only when DNS entries are changed or are soon to be changed. Otherwise, Letsencrypt validation might eventually get stuck due to retries."]}),"\n",(0,a.jsxs)(n.p,{children:["!NB Put ",(0,a.jsx)(n.code,{children:"exposeDomains"})," in a dedicated configuration yaml file, so only one environment (branch) would be assigned this hostname. Having multiple environments with the same domain will act as a round robin load balancer for all environments and unexpected responses might be returned."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart and Frontend chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"exposeDomains:\n  example-le:\n    hostname: ssl-le.example.com\n    ssl:\n      enabled: true\n      issuer: letsencrypt\n\n  example-customcert:\n    hostname: ssl-custom.example.com\n    ssl:\n      enabled: true\n      issuer: custom\n      # Encrypt key and certificate. See: docs/encrypting_sensitive_configuration.md\n      key: |\n        -----BEGIN RSA PRIVATE KEY-----\n        <KEY>\n        -----END RSA PRIVATE KEY-----\n      crt: |\n        -----BEGIN CERTIFICATE-----\n        < DOMAIN CERTIFICATE >\n        -----END CERTIFICATE-----\n        -----BEGIN CERTIFICATE-----\n        < INTERMEDIATE CERTIFICATE >\n        -----END CERTIFICATE-----\n        -----BEGIN CERTIFICATE-----\n        < ROOT CA CERTIFICATE >\n        -----END CERTIFICATE-----\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"key"})," value is certificates private key.\n",(0,a.jsx)(n.code,{children:"crt"})," value is full chain of certificate.\n",(0,a.jsx)(n.code,{children:"ca"})," value is not required anymore for exposed domains.\n",(0,a.jsx)(n.a,{href:"/silta/docs/ssl_certificates",children:"See more information on how to convert and prepare SSL certificate for exposed domains"})]}),"\n",(0,a.jsxs)(n.p,{children:["If you have same SSL certificate for multiple domains You can reuse ",(0,a.jsx)(n.code,{children:"ssl"})," block."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"exposeDomains:\n  example-domain1: &shared-ssl\n    ssl:\n      [....]\n  example-domain2:\n    <<: *shared-ssl\n  example-domain3:\n    <<: *shared-ssl\n"})}),"\n",(0,a.jsx)(n.p,{children:"You don't need a custom static ip (via gce ingress) normally, but if Your project requires, here's how -"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'exposeDomains:\n  example-gce-ingress:\n    hostname: gce-ingress.example.com\n    # see ingress.gce definition. This can also be a custom ingress too.\n    ingress: gce\n    ssl:\n      enabled: true\n      issuer: letsencrypt\n\ningress:\n  gce:\n    # Request a global static ip from OPS team first\n    staticIpAddressName: custom-ip-name\n\nnginx:\n  # Reverse proxy IP\'s to trust with contents of X-Forwarded-For header\n  realipfrom:\n    gke-internal: 10.0.0.0/8\n    # Load Balancer IP (static ip you were given)\n    gce-lb-ip: 1.2.3.4/32;\n\n# Depending on the cluster type, You might need to enable this.\n# A safe default is "false" (works in both cases), but "VPC Native"\n# clusters work more correcly with cluster.vpcNative set to "true".\ncluster:\n  vpcNative: true\n'})}),"\n",(0,a.jsx)(n.h2,{id:"add-redirects",children:"Add redirects"}),"\n",(0,a.jsxs)(n.p,{children:["Redirects can be relative to current domain or contain full domain for more targeted redirects when multiple external domains (",(0,a.jsx)(n.code,{children:"exposeDomains"}),") are attached to deployment, and you only need this redirect for a specific URL."]}),"\n",(0,a.jsxs)(n.p,{children:["If you are scattering the redirect rules into separate yaml's, use keys (or the latter yaml will overwrite the whole ",(0,a.jsx)(n.code,{children:"nginx.redirects"})," object) and the alphabetical order of keys will be respected in the nginx redirect map. Because of this, it's better to put everything in one file without keys, just descriptions and the order of the yaml will be respected."]}),"\n",(0,a.jsxs)(n.p,{children:["Each redirect has ",(0,a.jsx)(n.code,{children:"from"})," and ",(0,a.jsx)(n.code,{children:"to"})," keys, and an optional ",(0,a.jsx)(n.code,{children:"description"})," key, which does not do anything currently, it's a documentation comment for configuration maintainer."]}),"\n",(0,a.jsx)(n.h4,{id:"from",children:(0,a.jsx)(n.code,{children:"from"})}),"\n",(0,a.jsx)(n.p,{children:"By default, strings are matched using case-insensitive exact matching."}),"\n",(0,a.jsxs)(n.p,{children:["Regular expressions can be used by prefixing the value with ",(0,a.jsx)(n.code,{children:"~"})," for a case-sensitive matching, or with ",(0,a.jsx)(n.code,{children:"~*"})," for case-insensitive matching. Regular expressions can contain named and positional captures that can be referenced in the ",(0,a.jsx)(n.code,{children:"to"})," value."]}),"\n",(0,a.jsxs)(n.p,{children:["Make sure to use proper anchors (",(0,a.jsx)(n.code,{children:"^"})," and ",(0,a.jsx)(n.code,{children:"$"}),") and character escaping in regular expressions, to get exactly the match you want and nothing extra."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Bad example: ",(0,a.jsx)(n.code,{children:"from: '~/old-page"})," matches any string containing ",(0,a.jsx)(n.code,{children:"/old-page"}),", e.g. ",(0,a.jsx)(n.code,{children:"/anypath/old-page"})," or ",(0,a.jsx)(n.code,{children:"/old-page/anypath"})," or even ",(0,a.jsx)(n.code,{children:"/valid/path?/old-page"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Good example: ",(0,a.jsx)(n.code,{children:"from: ~^/old-page/.+\\.html"})," matches specifically path ",(0,a.jsx)(n.code,{children:"/old-page/*.html"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"to",children:(0,a.jsx)(n.code,{children:"to"})}),"\n",(0,a.jsxs)(n.p,{children:["Can include references to captured values from regular expressions, and special ",(0,a.jsx)(n.a,{href:"http://nginx.org/en/docs/http/ngx_http_core_module.html#variables",children:"nginx variables"})," like ",(0,a.jsx)(n.code,{children:"$request_uri"}),"or ",(0,a.jsx)(n.code,{children:"$query_string"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Drupal chart and Frontend chart"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"nginx:\n  redirects:\n    - description: 'Redirect exact path match to another path on same the domain.'\n      from: '/old-page'\n      to: '/new-page'\n    - description: 'Redirect exact path match to another path on another the domain.'\n      from: '/old-page'\n      to: 'https://another-domain.example.com/new-page'\n    - description: 'Redirect exact url match to another path on same the domain. Note: Matching using https does not work because of SSL/TLS offloading.'\n      from: 'http://example.com/old-page'\n      to: '/new-page'\n    - description: 'Redirect all non-www requests to www, keeping the request path intact.'\n      from: '~^http://example\\.com'\n      to: 'https://www.example.com$request_uri'\n    - description: 'Redirect exact url, matching both www and non-www.'\n      from: '~http://(www\\.)?example\\.com/old-page$'\n      to: '/new-page'\n    - description: 'Redirect case-insensitive url match.'\n      from: '~*http://www\\.example\\.com/oLd-pAgE$'\n      to: '/new-page'\n    - description: 'Redirect regex match, using positional capturing groups.'\n      from: '~^/old-articles/(.+)/view/(\\d+)$'\n      to: '/new-articles/$1/?article_id=$2'\n    - description: 'Redirect regex match, using named capturing groups.'\n      from: '~^/old-articles/(?<date>.+)/view/(?<id>\\d+)$'\n      to: '/new-articles/$date/?article_id=$id'\n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"allowing-cross-namespace--cross-deployment-connections",children:"Allowing cross-namespace / cross-deployment connections"}),"\n",(0,a.jsxs)(n.p,{children:["Resources in Silta charts are protected by ",(0,a.jsx)(n.a,{href:"https://projectcalico.docs.tigera.io/security/calico-network-policy",children:"Calico NetworkPolicy"})," rules. Rules are defined in helm ",(0,a.jsx)(n.code,{children:".Values.silta-release.ingressAccess"})," configuration object. There are few default rules that deny access to all pods in deployment from other deployments, but it is also possible to add extra [NetworkPolicy rules] (",(0,a.jsx)(n.a,{href:"https://projectcalico.docs.tigera.io/security/policy-rules",children:"https://projectcalico.docs.tigera.io/security/policy-rules"}),") to selecively allow access to deployment resources."]}),"\n",(0,a.jsx)(n.p,{children:"Here are few examples:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Allowing access to pods from another namespace:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"silta-release:\n  ingressAccess:\n    # Allow Frontend access to Drupal via internal connection\n    allow-drupal:\n      additionalPodSelector:\n        app: drupal\n      from:\n        - namespaceSelector:\n            matchLabels:\n              name: frontend-ns\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"Allow direct elasticsearch access from frontend namespace"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"silta-release:\n  # Allow Frontend access to elasticsearch via internal connection\n  allowESaccess:\n    additionalPodSelector:\n      chart: elasticsearch\n    from:\n      - namespaceSelector:\n          matchLabels:\n              name: frontend-ns\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:"Allow CIDR access to service (routed connection only, does not work with NAT'ted connections)"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"silta-release:\n  # Allow Azure Application Gateway to drupal service\n  ingressAccess:\n    CustomAzureAppGWAccess:\n      from:\n        - ipBlock:\n            cidr: 1.2.3.4/5\n"})}),"\n",(0,a.jsx)(n.h2,{id:"configure-security-context-for-frontend-services",children:"Configure security context for frontend services"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Frontend chart"}),":"]}),"\n",(0,a.jsxs)(n.p,{children:["Each individual service in the frontend chart can have its own security context configuration to enhance the security of your containers. The ",(0,a.jsx)(n.code,{children:"securityContext"})," configuration allows you to control various security-related settings for your containers, including user/group permissions, Linux capabilities, and security profiles."]}),"\n",(0,a.jsx)(n.p,{children:"Security contexts are crucial for implementing the principle of least privilege in your containerized applications, helping to minimize the potential impact of security vulnerabilities."}),"\n",(0,a.jsx)(n.h3,{id:"security-context-properties",children:"Security Context Properties"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'services:\n  myservice:\n    securityContext:\n      # Controls whether a process can gain more privileges than its parent process\n      # Setting this to false ensures that no child process of the container can\n      # gain more privileges than the container itself\n      allowPrivilegeEscalation: false\n\n      # Makes the container\'s root filesystem read-only, preventing\n      # modifications to the container\'s filesystem at runtime\n      # This helps prevent malicious or accidental modifications\n      readOnlyRootFilesystem: true\n\n      # Forces the container to run as a non-root user\n      # This is a key security practice to reduce the impact of container breakouts\n      runAsNonRoot: true\n\n      # Specifies the user ID (UID) that processes in the container will run as\n      # Using a non-zero value ensures processes don\'t run as root (UID 0)\n      runAsUser: 1000\n\n      # Specifies the primary group ID (GID) for processes in the container\n      runAsGroup: 1000\n\n      # Sets the group ID for filesystem operations\n      # This is used for volume mounts and file creation\n      fsGroup: 1000\n\n      # Controls whether the container runs in privileged mode\n      # Privileged containers have nearly all the capabilities of the host machine\n      # This should almost always be set to false for security reasons\n      privileged: false\n\n      # Configures how proc is mounted in the container\n      # Options: "Default" or "Unmasked"\n      # "Default" is the standard masked proc mount\n      # "Unmasked" is less secure but may be required for certain applications\n      procMount: "Default"\n\n      # Linux capabilities provide fine-grained control over privileged operations\n      capabilities:\n        # Capabilities to add to the container\n        # Only add capabilities that are absolutely necessary\n        add:\n          # Allows binding to ports below 1024 without root privileges\n          - "NET_BIND_SERVICE"\n          # Other examples of capabilities:\n          # - "CHOWN" - Allows changing file ownership\n          # - "FOWNER" - Bypass permission checks on operations that normally require the filesystem UID to match the process\'s UID\n          # - "SETGID" - Make arbitrary manipulations of process GIDs\n          # - "SETUID" - Make arbitrary manipulations of process UIDs\n\n        # Capabilities to remove from the container\n        # It\'s a best practice to drop all capabilities and only add those needed\n        drop:\n          - "ALL"\n\n      # Seccomp (secure computing mode) profile configuration\n      # Seccomp restricts the system calls that a container can make\n      seccompProfile:\n        # Type of seccomp profile to use\n        # Options: "RuntimeDefault", "Localhost", or "Unconfined"\n        # "RuntimeDefault" uses the container runtime\'s default profile\n        # "Localhost" uses a profile defined on the host\n        # "Unconfined" disables seccomp restrictions (not recommended)\n        type: "RuntimeDefault"\n        # Path to a seccomp profile on the host when type is "Localhost"\n        localhostProfile: "my-profiles/profile-allow.json"\n\n      # SELinux (Security-Enhanced Linux) options\n      # These control the SELinux context of the container\n      seLinuxOptions:\n        # SELinux level label\n        level: "s0:c123,c456"\n        # SELinux role label\n        role: "object_r"\n        # SELinux type label\n        type: "spc_t"\n        # SELinux user label\n        user: "system_u"\n\n      # Sysctls allow setting kernel parameters at runtime\n      # These are applied to the container\'s namespace\n      sysctls:\n        - name: "kernel.shm_rmid_forced"\n          value: "0"\n        - name: "net.core.somaxconn"\n          value: "1024"\n        # Other examples:\n        # - name: "net.ipv4.ip_local_port_range"\n        #   value: "1024 65535"\n        # - name: "kernel.msgmax"\n        #   value: "65536"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Web server running on port 80:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'securityContext:\n  allowPrivilegeEscalation: false\n  readOnlyRootFilesystem: true\n  runAsNonRoot: true\n  runAsUser: 1000\n  capabilities:\n    add: ["NET_BIND_SERVICE"]\n    drop: ["ALL"]\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Application requiring file ownership changes:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'securityContext:\n  runAsNonRoot: true\n  runAsUser: 1000\n  capabilities:\n    add: ["CHOWN"]\n    drop: ["ALL"]\n'})}),"\n",(0,a.jsx)(n.h2,{id:"add-custom-include-files-for-nginx",children:"Add custom include files for nginx"}),"\n",(0,a.jsxs)(n.p,{children:["Drupal chart builds nginx container using web/ folder as build context. This prevents files being included from outside the web folder and it's not a good idea to put config files under it.\nTo be able to add include files the build context needs to be changed from ",(0,a.jsx)(n.code,{children:"web/"})," into ",(0,a.jsx)(n.code,{children:"."})," by passing ",(0,a.jsx)(n.code,{children:'nginx_build_context: "."'})," to ",(0,a.jsx)(n.code,{children:"drupal-docker-build"})," in ",(0,a.jsx)(n.code,{children:".circleci/config.yml"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'jobs:\n  - silta/drupal-docker-build:\n      nginx_build_context: "."\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Due root containing Drupal / shell container compatible .dockerignore file and for frontend there is a separate one inside the web/ folder this doesn't work anymore. Since version 19.03 Docker supports separate .dockerignore files for each Dockerfile. This requires Docker build to be made with BuildKit enabled. To enable BuildKit just pass the ",(0,a.jsx)(n.code,{children:"DOCKER_BUILDKIT=1"})," to the build environment as an environment variable:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"environment:\n  DOCKER_BUILDKIT: 1\n"})}),"\n",(0,a.jsx)(n.p,{children:"The ignore file itself needs to be named the same as the Dockerfile with .dockerignore appended to the end and need to reside at the same place as the Dockerfile:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cp web/.gitignore silta/nginx.Dockerfile.dockerignore\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Note: our validation checks if the .dockerignore is present under web/ so you can either leave it there or just add an empty file in it's place.\nTo make the image to build correctly in this new context you need to update the COPY command in the nginx.Dockerfile to copy ",(0,a.jsx)(n.code,{children:"web"})," instead of ",(0,a.jsx)(n.code,{children:"."})," and also add COPY commands to any custom config files you want to be able to include:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"COPY silta/nginx.serverextra.conf /etc/nginx\n\nCOPY web /app/web\n"})}),"\n",(0,a.jsx)(n.p,{children:"Now you can include the config file in silta.yml like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"nginx:\n  serverExtraConfig: |\n    include nginx.serverextra.conf;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["or if you ",(0,a.jsx)(n.code,{children:"COPY"})," the file under ",(0,a.jsx)(n.code,{children:"/etc/nginx/conf.d"})," they will be included automatically without the need to add them to silta.yml configs."]}),"\n",(0,a.jsx)(n.h2,{id:"deploy-sub-project-from-the-same-repo-using-simple-chart",children:"Deploy sub-project from the same repo using simple chart"}),"\n",(0,a.jsxs)(n.p,{children:["Having e.g. Storybook or other frontend application included in the base project codebase that require\nseparate deployment can be easily done even using different chart.\nSee ",(0,a.jsx)(n.a,{href:"/silta/docs/circleci-conf-examples",children:"https://wunderio.github.io/silta/docs/circleci-conf-examples"})," for the deployment setup part."]}),"\n",(0,a.jsx)(n.p,{children:"When using different charts (e.g. drupal and simple) you need to separate chart specific configurations to their own silta-*.yml files if you want to share any configs between the application deployments (for example basic auth credentials). Best way to do it is to put only the shared configurations to the silta.yml file and have e.g. silta-cms.yml and silta-storybook.yml for application specific configurations."}),"\n",(0,a.jsx)(n.h2,{id:"add-custom-subcharts-to-deployment",children:"Add custom subcharts to deployment"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["In ",(0,a.jsx)(n.code,{children:"silta"})," folder, create ",(0,a.jsx)(n.code,{children:"extra_charts.yml"})," which contains list of subcharts to add."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Following examples add a redis subchart to drupal chart deployment."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"charts:\n- name: redis\n  version: 16.8.x\n  repository: https://charts.bitnami.com/bitnami\n  condition: redis.enabled\n"})}),"\n",(0,a.jsxs)(n.p,{children:["To use a local subchart, replace repository link with ",(0,a.jsx)(n.code,{children:"file://<path>/<to>/<subchart>"})]}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["Add these 2 parameters to ",(0,a.jsx)(n.code,{children:"drupal-deploy"})," CircleCI job:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"      - silta/drupal-deploy:\n          source_chart: wunderio/drupal\n          extension_file: silta/extra_charts.yml\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:["If desired, modify variables for the subchart in ",(0,a.jsx)(n.code,{children:"silta.yml"})," under the key of subcharts' name. For example above, it's ",(0,a.jsx)(n.code,{children:"redis"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"[..]\nredis:\n  enabled: true\n  auth:\n    password: test\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Sets redis password to test"})}),"\n",(0,a.jsxs)(n.p,{children:["Notice the ",(0,a.jsx)(n.code,{children:"condition"})," key in ",(0,a.jsx)(n.code,{children:"extra_charts.yml"})," for the redis subchart. It makes it possible to deploy this subchart conditionally, when ",(0,a.jsx)(n.code,{children:"redis: enabled"})," is passed in ",(0,a.jsx)(n.code,{children:"silta.yml"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Delete the ",(0,a.jsx)(n.code,{children:"condition: redis.enabled"})," line if you want this subchart installed in all your future deployments, regardless of settings in ",(0,a.jsx)(n.code,{children:"silta.yml"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var i=s(6540);const a={},r=i.createContext(a);function t(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);