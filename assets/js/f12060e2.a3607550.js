"use strict";(self.webpackChunksilta_docs=self.webpackChunksilta_docs||[]).push([[953],{2530:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"vendor-aks","title":"Azure Services compatibility","description":"Silta is AKS compatible, there are some requirements and special features available for environments deployed to Azure AKS cluster.","source":"@site/docs/vendor-aks.md","sourceDirName":".","slug":"/vendor-aks","permalink":"/silta/docs/vendor-aks","draft":false,"unlisted":false,"editUrl":"https://github.com/wunderio/silta/tree/master/docs/vendor-aks.md","tags":[],"version":"current","frontMatter":{}}');var t=n(4848),r=n(8453);const a={},o="Azure Services compatibility",l={},c=[{value:"Cluster requirements",id:"cluster-requirements",level:2},{value:"Deployment specifics",id:"deployment-specifics",level:2},{value:"Azure features",id:"azure-features",level:2},{value:"Azure Files",id:"azure-files",level:3},{value:"Application Gateway",id:"application-gateway",level:3},{value:"AKS cluster preparations",id:"aks-cluster-preparations",level:4},{value:"Deployment preparations",id:"deployment-preparations",level:4}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"azure-services-compatibility",children:"Azure Services compatibility"})}),"\n",(0,t.jsx)(s.p,{children:"Silta is AKS compatible, there are some requirements and special features available for environments deployed to Azure AKS cluster."}),"\n",(0,t.jsx)(s.h2,{id:"cluster-requirements",children:"Cluster requirements"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"AKS network plugin = kubenet and network policy = calico (can't be changed after cluster is created) for Calico Network Policy support;"}),"\n",(0,t.jsx)(s.li,{children:"Network CIDR should preferably be 10.x.y.z (default value). Changing is possible, will require deployment value tweaks;"}),"\n",(0,t.jsx)(s.li,{children:"Microsoft.Storage subscription for azurefile-csi mounts (optional, if used)"}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["There are few more requirements listed on ",(0,t.jsx)(s.a,{href:"https://github.com/wunderio/charts/tree/master/silta-cluster#requirements",children:"silta-cluster chart page"}),", those are common for all silta-cluster installations"]}),"\n",(0,t.jsx)(s.h2,{id:"deployment-specifics",children:"Deployment specifics"}),"\n",(0,t.jsxs)(s.p,{children:["There is no extra configuration required for basic deployments. The only change would be ",(0,t.jsx)(s.code,{children:"cluster.type"})," but it's normally overriden in CI pipeline."]}),"\n",(0,t.jsx)(s.p,{children:"Drupal, frontend and simple charts:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:"cluster:\n  type: aks\n"})}),"\n",(0,t.jsx)(s.h2,{id:"azure-features",children:"Azure features"}),"\n",(0,t.jsx)(s.h3,{id:"azure-files",children:"Azure Files"}),"\n",(0,t.jsxs)(s.p,{children:["By default, silta is configured to provide shared storage mounts with ",(0,t.jsx)(s.a,{href:"https://min.io/",children:"Minio"}),", locally hosted S3 compatible object storage provider. When ",(0,t.jsx)(s.a,{href:"https://github.com/wunderio/charts/tree/master/silta-cluster",children:"silta-cluster"})," is configured accordingly, the ",(0,t.jsx)(s.code,{children:"silta-shared"})," storageClass will use ",(0,t.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blobs-introduction",children:"Microsoft Azure Blob Storage"})," for shared mounts (backups, reference data, public and private file mounts)."]}),"\n",(0,t.jsxs)(s.p,{children:['Since AKS provides "',(0,t.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/azure/storage/files/storage-files-introduction",children:"Azure Files"}),'" CSI storage driver with "',(0,t.jsx)(s.a,{href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes",children:"Read Write Many"}),'" support, it\'s possible to swap "Azure Blob Storage" for "Azure Files". It provides slightly increased i/o performance and instant mounted data synchronization between backends.']}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:'Note: The "azurefile-csi" storage is case insensitive. There is no distinction between files called "Abc" and "ABC", it will rewrite the same file.'})}),"\n",(0,t.jsx)(s.p,{children:"Note 2: This is normally only needed only for projects with many files and many backends."}),"\n",(0,t.jsx)(s.p,{children:"Note 3: You can't change this value for existing deployments. Deployment needs to be removed and redeployed."}),"\n",(0,t.jsxs)(s.p,{children:["To set up, override ",(0,t.jsx)(s.code,{children:"silta-shared"}),' storage class to "azurefile-csi" and double check "storage" value because this will be used and enforced now. If you make the reservation too small, You\'ll need to ask cluster administrator to ',(0,t.jsx)(s.a,{href:"https://github.com/wunderio/silta/blob/master/docs/troubleshooting.md#mariadb-or-elasticsearch-running-out-of-disk-space",children:"expand the storage value"}),"."]}),"\n",(0,t.jsx)(s.p,{children:"Minimal configuration (drupal chart):"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:"mounts:\n  public-files:\n    # check and override `storage` value according to project specifics\n    storageClassName: azurefile-csi\n    storage: 1G\n  # don't forget to override private file storage if in use\n  # private-files:\n  #   storageClassName: azurefile-csi\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This also allows replacing ",(0,t.jsx)(s.code,{children:"storageClassName"})," for other mounts (i.e. backups, reference data), but it makes less sense to adjust them."]}),"\n",(0,t.jsx)(s.p,{children:"Troubleshooting:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"It's possible that the azurefile-csi driver is not enabled. Ask cluster administrator to enable it."}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"# Register Microsoft.Storage subscription for azurefile-csi mounts\naz provider register --namespace Microsoft.Storage\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Nginx open file cache prevents file removal"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"When the file is cached in nginx open_file_cache, it opens file handle and does not release until cache is invalid or nginx process is stopped. This only happens on (Azure) filestore-csi filesystem at the moment."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"[warning] unlink(/app/web/sites/default/files/css/css_8SwtpM_JE4c-Hmf7Tw_VTpfz1GvHbLy26YQw6w7XWms.css): No such file or directory FileSystem.php:124\n[error]  Failed to unlink file 'public://css/css_8SwtpM_JE4c-Hmf7Tw_VTpfz1GvHbLy26YQw6w7XWms.css'.\nIn FileSystem.php line 340:\nFailed to unlink file 'public://css/css_8SwtpM_JE4c-Hmf7Tw_VTpfz1GvHbLy26YQ2022-07-26T05:10:37.660255490Z   w6w7XWms.css'.\n"})}),"\n",(0,t.jsx)(s.p,{children:"Solution is to disable nginx open_file_cache in silta configuration."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:"nginx:\n  open_file_cache:\n    enabled: false\n"})}),"\n",(0,t.jsx)(s.h3,{id:"application-gateway",children:"Application Gateway"}),"\n",(0,t.jsxs)(s.p,{children:["Silta provides a way to use existing ",(0,t.jsx)(s.a,{href:"https://azure.microsoft.com/en-us/services/application-gateway/",children:"Azure Application Gateway"})," for deployment URLs and exposed domains."]}),"\n",(0,t.jsx)(s.h4,{id:"aks-cluster-preparations",children:"AKS cluster preparations"}),"\n",(0,t.jsx)(s.p,{children:"It would require Azure administrator to do few adjustments first (one time thing):"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Creating virtual network and subnetwork for Application Gateway"}),"\n",(0,t.jsx)(s.li,{children:"Application Gateway and static ip that will be used for deployment DNS entries"}),"\n",(0,t.jsx)(s.li,{children:"Bi-directional network peering for Application Gateway network and Kubernetes Cluster networks"}),"\n",(0,t.jsx)(s.li,{children:"Enabling AGIC addon in Kubernetes Cluster so it monitors in-cluster ingress resources"}),"\n",(0,t.jsx)(s.li,{children:"Associating the route table to Application Gateway's subnet"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Related documentation bits:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/azure/application-gateway/tutorial-ingress-controller-add-on-existing",children:"https://docs.microsoft.com/en-us/azure/application-gateway/tutorial-ingress-controller-add-on-existing"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://azure.github.io/application-gateway-kubernetes-ingress/how-tos/networking/#with-kubenet",children:"https://azure.github.io/application-gateway-kubernetes-ingress/how-tos/networking/#with-kubenet"})}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"deployment-preparations",children:"Deployment preparations"}),"\n",(0,t.jsx)(s.p,{children:"You will need to grant Application Gateway access to deployment"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:'nginx:\n  # Allow Application Gateway network to access liveness probes\n  noauthips:\n    custom-azure-appgw: 172.30.1.0/24\n  # Trust Application Gateway network to supply real ip via "x-forwarded-for" header. \n  # Ommiting this will remove basic auth for all requests (see `nginx.noauthips`)\n  realipfrom: \n    custom-azure-appgw: 172.30.1.0/24\n  \n# Add NetworkPolicy exception for Application Gateway or it will timeout\nsilta-release:\n  ingressAccess:\n    CustomAzureAppGWAccess:\n      from:\n        - ipBlock:\n            cidr: 172.30.1.0/24\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Note: Replace ",(0,t.jsx)(s.code,{children:"172.30.1.0/24"})," with the actual value. Ask cluster administrator the actual network address."]}),"\n",(0,t.jsx)(s.p,{children:"There are two options to use the Application Gateway:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["Keeping existing load balancer (traefik) for default ingress class for deployment, leaving existing built-in domain as-is and only changing ingress class for ",(0,t.jsx)(s.code,{children:"exposeDomains"})," domain (this is preferred):"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Drupal chart:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:'exposeDomains:\n  example:\n    hostname: example.com\n    # "aks" is a generic key name that references ingress.[ingressname]. It does not mean anything.\n    ingress: aks\n\ningress:\n  aks:\n    # This is the actual ingressClass name\n    type: azure/application-gateway\n    # Can add custom annotations to ingress. \n    # See: https://azure.github.io/application-gateway-kubernetes-ingress/annotations/\n    # extraAnnotations:\n      # appgw.ingress.kubernetes.io/ssl-redirect: true\n\n'})}),"\n",(0,t.jsxs)(s.ol,{start:"2",children:["\n",(0,t.jsx)(s.li,{children:"Replacing default ingress class with Application Gateway. This will require additional DNS entry changes."}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:"exposeDomains:\n  example:\n    hostname: example.com\n\ningress:\n  default:\n    type: azure/application-gateway\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Note: You can define ",(0,t.jsx)(s.a,{href:"https://azure.github.io/application-gateway-kubernetes-ingress/annotations/",children:"custom annotations"})," for ingress using ",(0,t.jsx)(s.code,{children:"ingress.[ingressname].extraAnnotations"}),"."]})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>o});var i=n(6540);const t={},r=i.createContext(t);function a(e){const s=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);