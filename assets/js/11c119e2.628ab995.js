"use strict";(self.webpackChunksilta_docs=self.webpackChunksilta_docs||[]).push([[222],{7784:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"key-components","title":"Key components","description":"Github","source":"@site/docs/key_components.md","sourceDirName":".","slug":"/key-components","permalink":"/silta/docs/key-components","draft":false,"unlisted":false,"editUrl":"https://github.com/wunderio/silta/tree/master/docs/key_components.md","tags":[],"version":"current","frontMatter":{"id":"key-components","title":"Key components"},"sidebar":"someSidebar","previous":{"title":"Helping with Silta development","permalink":"/silta/docs/help-with-silta-dev"},"next":{"title":"Migrating an existing Drupal project","permalink":"/silta/docs/migrating-an-existing-drupal-project"}}');var n=i(4848),o=i(8453);const s={id:"key-components",title:"Key components"},c=void 0,a={},l=[{value:"Github",id:"github",level:2},{value:"CircleCI",id:"circleci",level:2},{value:"Kubernetes",id:"kubernetes",level:2},{value:"Helm",id:"helm",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"github",children:"Github"}),"\n",(0,n.jsxs)(t.p,{children:["All of our code is stored in Github within our organisation. All project-specific infrastructure\nconfiguration is versioned in Git. We provide a default templates for\n",(0,n.jsx)(t.a,{href:"https://github.com/wunderio/drupal-project",children:"Drupal projects"}),", ",(0,n.jsx)(t.a,{href:"https://github.com/wunderio/frontend-project",children:"Customized services"})," (Originally frontend project) and ",(0,n.jsx)(t.a,{href:"https://github.com/wunderio/simple-project",children:"Static pages"}),", but any Docker-compatible application\nis supported."]}),"\n",(0,n.jsx)(t.h2,{id:"circleci",children:"CircleCI"}),"\n",(0,n.jsxs)(t.p,{children:["CircleCI is a cloud-based CI solution that integrates with Github.\nOne of the great features is the possibility to use your own builder images,\nwe use our own called ",(0,n.jsx)(t.a,{href:"https://github.com/wunderio/circleci-builder",children:"circleci-builder"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["We use CircleCi to check the repository for errors, build the codebase, build custom docker\nimages, push them to the registry and deploy a release of our Helm chart. The build process is based\non a config file located under ",(0,n.jsx)(t.code,{children:".circleci/config.yml"})," in the git repository."]}),"\n",(0,n.jsxs)(t.p,{children:["To perform its duties, CircleCI needs certain credentials, for example to push to the docker image\nregistry or to interact with the Kubernetes master. These credentials are stored in a\n",(0,n.jsx)(t.a,{href:"https://circleci.com/docs/2.0/contexts/",children:"CircleCI Contexts"})," and are available to any repository\nin our Github organisation."]}),"\n",(0,n.jsxs)(t.p,{children:["See CircleCI context variable requirements for Silta deployments in docs: ",(0,n.jsx)(t.a,{href:"/silta/docs/circleci-context",children:"Silta CircleCI Context"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"kubernetes",children:"Kubernetes"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://kubernetes.io/",children:"Kubernetes"})," is an open source container orchestration platform supported by all major cloud hosting providers."]}),"\n",(0,n.jsx)(t.h2,{id:"helm",children:"Helm"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://helm.sh/",children:"Helm"})," is a package manager for Kubernetes. We published our own chart repository: ",(0,n.jsx)(t.a,{href:"https://github.com/wunderio/charts",children:"https://github.com/wunderio/charts"}),". The chart is referenced from the CircleCI configuration, and each repository can also override the default values to adapt the configuration."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>c});var r=i(6540);const n={},o=r.createContext(n);function s(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);