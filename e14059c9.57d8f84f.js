(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=s(n),m=a,d=b["".concat(c,".").concat(m)]||b[m]||u[m]||i;return n?r.a.createElement(d,l(l({ref:t},p),{},{components:n})):r.a.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var p=2;p<i;p++)c[p]=n[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},93:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),i=(n(0),n(102)),c={id:"encrypting-sensitive-configuration",title:"Encrypting sensitive configuration"},l={unversionedId:"encrypting-sensitive-configuration",id:"encrypting-sensitive-configuration",isDocsHomePage:!1,title:"Encrypting sensitive configuration",description:"Certain configuration items such as access tokens or secret keys are quite sensitive",source:"@site/docs/encrypting_sensitive_configuration.md",slug:"/encrypting-sensitive-configuration",permalink:"/silta/docs/encrypting-sensitive-configuration",editUrl:"https://github.com/wunderio/silta/tree/master/docs/encrypting_sensitive_configuration.md",version:"current",sidebar:"someSidebar",previous:{title:"Docker images",permalink:"/silta/docs/docker-images"},next:{title:"Go-live checklist",permalink:"/silta/docs/go-live-checklist"}},o=[{value:"Example of secret environment variables",id:"example-of-secret-environment-variables",children:[]},{value:"Using a custom encryption key",id:"using-a-custom-encryption-key",children:[]},{value:"Decrypting existing secrets file",id:"decrypting-existing-secrets-file",children:[]}],p={toc:o};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Certain configuration items such as access tokens or secret keys are quite sensitive\nand should not be committed to the repository in plain text. Silta supports decrypting certain files\nduring the build process."),Object(i.b)("p",null,"We use ",Object(i.b)("inlineCode",{parentName:"p"},"openssl")," to encrypt files, but there are many versions available with incompatible ciphers.\nWe therefore recommend the following process:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},'SSH into a CircleCI environment using "Rerun workflow > Rerun job with SSH" from the last build. Note that different environments might have different circleci contexts and hence - different encryption keys. Check your circleci config file for context information.\nYou will get a command like (the actual IP and port changes for each build)'),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"ssh -p 64537 3.80.240.10\n")),Object(i.b)("p",{parentName:"li"},"If you have trouble getting in, please refer to ",Object(i.b)("inlineCode",{parentName:"p"},"troubleshooting.md")," SSH section.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Create your file named ",Object(i.b)("inlineCode",{parentName:"p"},"/tmp/secret_file"),".")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Encrypt it with"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"openssl aes-256-cbc -pbkdf2 -in /tmp/secret_file -out /tmp/encrypted_file -pass env:SECRET_KEY\n")),Object(i.b)("p",{parentName:"li"},"Make sure that the ",Object(i.b)("inlineCode",{parentName:"p"},"-in")," and ",Object(i.b)("inlineCode",{parentName:"p"},"-out")," parameters are not the same, or openssl will encrypt its own output.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Now copy the encrypted file back to your local environment with"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"scp -P 64537 3.80.240.10:/tmp/encrypted_file path/to/file\n")),Object(i.b)("p",{parentName:"li"},"The port and IP should be the same as the SSH instructions. Note that ",Object(i.b)("inlineCode",{parentName:"p"},"-P")," is uppercase for ",Object(i.b)("inlineCode",{parentName:"p"},"scp"),"!"),Object(i.b)("p",{parentName:"li"},'You might get an error like "subsystem request failed on channel 0\nscp: Connection closed"\nTry to use -O as an argument, like this:'),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"scp -O -P 64537 3.80.240.10:/tmp/encrypted_file path/to/file\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Commit the encrypted file to git at the location where you want to have it.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"In your CircleCI configuration, add following "),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("em",{parentName:"li"},"Drupal chart"),": Add following under ",Object(i.b)("inlineCode",{parentName:"li"},"silta/drupal-build-deploy"),":")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"decrypt_files: path/to/file\n")),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("em",{parentName:"li"},"Drupal chart"),": If using multiple secret files separate them with a comma (space separation work but is deprecated). For example:")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"decrypt_files: silta/secrets,silta/secrets-this,silta/secrets-that\n")),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("em",{parentName:"li"},"Frontend chart"),": Add following under ",Object(i.b)("inlineCode",{parentName:"li"},"codebase-build"),":")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"- silta/decrypt-files:\n    files: path/to/file\n")),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"path/to/file")," is relative to the build folder (root)"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Your secret file can also contain an extension to the configuration in silta.yml, for example to set encrypted environment variables. To do that, add this to your ",Object(i.b)("inlineCode",{parentName:"p"},"drupal-build-deploy")," CircleCI job:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"silta_config: silta/silta.yml,silta/secrets\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},'Push your code, the file will get decrypted in place at the build time.\nCheck the CircleCI step "Decrypt secret files".')),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Your secret file can be used as it is (for example, the private key to connect to another service)."))),Object(i.b)("h2",{id:"example-of-secret-environment-variables"},"Example of secret environment variables"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Drupal chart")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"php:\n  env:\n    PAYMENT_GW_KEY: '1234567890qwertyuiop'\n")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Frontend chart")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"services:\n  myservice:\n    env:\n      PAYMENT_GW_KEY: '1234567890qwertyuiop'\n")),Object(i.b)("h2",{id:"using-a-custom-encryption-key"},"Using a custom encryption key"),Object(i.b)("p",null,"For cases where you want to have your own encryption key, you can do that with the following steps:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Create an environment variable in your CircleCI project.\nClick the gear icon on a build page > Environment variables > Add Variable.\nUse a name like ",Object(i.b)("inlineCode",{parentName:"li"},"MYPROJECT_SECRET_KEY")," and the value of your choice (preferably a strong key)."),Object(i.b)("li",{parentName:"ul"},"Use the same step as above, but specify the environment variable to be used as the decryption key:",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"- silta/decrypt-files:\n    files: path/to/file\n    secret_key_env: MYPROJECT_SECRET_KEY\n")))),Object(i.b)("h2",{id:"decrypting-existing-secrets-file"},"Decrypting existing secrets file"),Object(i.b)("p",null,"Check the port and IP address by Rerunning the latest workflow in CircleCI: > Rerun job with SSH"),Object(i.b)("p",null,"Using the SSH port and IP address securely copy your silta/secrets file to CircleCI"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"scp -P 64537 silta/secrets 3.80.240.10:/tmp/encrypted_file\n")),Object(i.b)("p",null,"SSH to CircleCI using the correct port/IP you got from rerunning the job with SSH"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"ssh -p 64537 3.80.240.10\n")),Object(i.b)("p",null,"Run following command in CircleCI:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"openssl aes-256-cbc -pbkdf2 -d -in /tmp/encrypted_file -out /tmp/decrypted_file -pass env:SECRET_KEY\n")),Object(i.b)("p",null,"Check ",Object(i.b)("inlineCode",{parentName:"p"},"/tmp/decrypted_file")," or scp it back to your local using"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"scp -P 64537 3.80.240.10:/tmp/decrypted_file silta/secrets_decrypted\n")))}s.isMDXComponent=!0}}]);