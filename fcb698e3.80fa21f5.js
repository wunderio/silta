(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{101:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return p}));var n=r(3),a=r(7),o=(r(0),r(105)),l={id:"help-with-silta-dev",title:"Helping with Silta development"},i={unversionedId:"help-with-silta-dev",id:"help-with-silta-dev",isDocsHomePage:!1,title:"Helping with Silta development",description:"Development workflow",source:"@site/docs/helping_with_silta_development.md",slug:"/help-with-silta-dev",permalink:"/silta/docs/help-with-silta-dev",editUrl:"https://github.com/wunderio/silta/tree/master/docs/helping_with_silta_development.md",version:"current",sidebar:"someSidebar",previous:{title:"Go-live checklist",permalink:"/silta/docs/go-live-checklist"},next:{title:"Key components",permalink:"/silta/docs/key-components"}},c=[{value:"Development workflow",id:"development-workflow",children:[{value:"Testing",id:"testing",children:[]}]},{value:"Contribution",id:"contribution",children:[]},{value:"Some tips and external documentation when working with HELM charts",id:"some-tips-and-external-documentation-when-working-with-helm-charts",children:[]}],s={toc:c};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"development-workflow"},"Development workflow"),Object(o.b)("p",null,"Each chart (drupal, frontend, simple) has respective project that uses the chart as subfolder under ",Object(o.b)("inlineCode",{parentName:"p"},"/charts"),". So adjustments to chart can be made on each commit. Check ",Object(o.b)("a",{parentName:"p",href:"https://github.com/wunderio/drupal-project-k8s/blob/master/.circleci/config.yml#L29"},".cirlceci/config.yml")," in Drupal chart to see how it's defined. So you make a PR for a specific chart (either ",Object(o.b)("a",{parentName:"p",href:"https://github.com/wunderio/drupal-project-k8s"},"drupal-project-k8s")," or ",Object(o.b)("a",{parentName:"p",href:"https://github.com/wunderio/frontend-project-k8s"},"frontend-project-k8s")," or ",Object(o.b)("a",{parentName:"p",href:"https://github.com/wunderio/simple-project-k8s"},"simple-project-k8s"),")"),Object(o.b)("h3",{id:"testing"},"Testing"),Object(o.b)("p",null,"Before making a pull request you should install the unittest helm plugin:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"helm plugin install https://github.com/helm-unittest/helm-unittest --version 0.5.1\n")),Object(o.b)("p",null,"and run in on your updated chart:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"helm unittest ./charts/drupal\n")),Object(o.b)("p",null,"To test charts locally You will need related helm repositories to be installed locally (see charts/chartname/Chart.yaml) and subcharts downloaded."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Adding helm repository:       ")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"helm repo add wunderio https://storage.googleapis.com/charts.wdr.io\n")),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},"Download / rebuild the charts/ directory based on the Chart.lock file")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"helm dependency build charts/drupal\n")),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},"Dry-run chart and check kubernetes resource definitions for expected output")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"helm upgrade --install test charts/drupal --dry-run --debug --values silta/silta.yml\n")),Object(o.b)("h2",{id:"contribution"},"Contribution"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Someone from silta dev team will review changes and review the PR. Once accepted by one of them, it can be merged to master."),Object(o.b)("li",{parentName:"ol"},"Once changes are merged to project there are 2 options:",Object(o.b)("ol",{parentName:"li"},Object(o.b)("li",{parentName:"ol"},"Silta developers diff wunderio/charts/drupal to wunderio/drupal-project-k8s/charts/drupal before next release by copying over multiple changes in bulk and increment chart version in both repos, making them in sync again."),Object(o.b)("li",{parentName:"ol"},"You can make a copy of that accepted PR to wunderio/charts repo where it will be accepted again.")))),Object(o.b)("p",null,"If you want to test a feature PR:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Create a new branch from feature/myAwesomeThing -> feature/myAwesomeThing-test."),Object(o.b)("li",{parentName:"ol"},"Enable the myAwesomeThing related functionality or apply new configuration related to the feature."),Object(o.b)("li",{parentName:"ol"},"Commit the changes to the test branch and push to origin."),Object(o.b)("li",{parentName:"ol"},"Check that functionality works as it should."),Object(o.b)("li",{parentName:"ol"},"Write tests when possible and push them to the original feature branch or request the original author to add them."),Object(o.b)("li",{parentName:"ol"},"Delete the test branch if everything works.")),Object(o.b)("h2",{id:"some-tips-and-external-documentation-when-working-with-helm-charts"},"Some tips and external documentation when working with HELM charts"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://helm.sh/docs/chart_template_guide/control_structures/"},"Helm template guide - control structures"),Object(o.b)("br",{parentName:"p"}),"\n",Object(o.b)("a",{parentName:"p",href:"http://masterminds.github.io/sprig/defaults.html"},"Goland Sprig functions")))}p.isMDXComponent=!0},105:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(r),h=n,d=u["".concat(l,".").concat(h)]||u[h]||b[h]||o;return r?a.a.createElement(d,i(i({ref:t},s),{},{components:r})):a.a.createElement(d,i({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,r)}h.displayName="MDXCreateElement"}}]);